View(Employees)
resetSchedule()
resetSchedule()
View(AM)
View(PM)
View(AM)
resetSchedule()
View(AM)
assignShift("AM", "10-5(D)", "Mon", driver = TRUE)
View(AM)
View(Employees)
Employees[which(Employees$Name == "Trevor"), "Worked"] = TRUE
View(Employees)
View(E)
assignShift("AM", "10-5(D)", "Tues", driver = TRUE)
View(E)
source('~/Desktop/JJs Scheduler/generateSchedule.R')
View(Employees)
View(E)
View(AM)
source('~/Desktop/JJs Scheduler/generateSchedule.R')
resetSchedule()
scheduleWeek(AM, "AM")
View(AM)
source('~/Desktop/JJs Scheduler/generateSchedule.R')
resetSchedule()
scheduleWeek(AM, "AM")
View(AM)
source('~/Desktop/JJs Scheduler/generateSchedule.R')
source('~/Desktop/JJs Scheduler/generateSchedule.R')
View(AM)
source('~/Desktop/JJs Scheduler/generateSchedule.R')
resetSchedule()
scheduleWeek(AM, "AM")
View(AM)
View(E)
View(Employees)
scheduleWeek(PM, "PM")
View(PM)
View(AM)
source('~/Desktop/JJs Scheduler/generateSchedule.R')
source('~/Desktop/JJs Scheduler/generateSchedule.R')
resetSchedule()
scheduleWeek(PM, "PM")
View(E)
resetSchedule()
scheduleWeek(PM, "PM")
View(PM)
View(Employees)
View(PM)
View(PM)
source('~/Desktop/JJs Scheduler/generateSchedule.R')
source('~/Desktop/JJs Scheduler/generateSchedule.R')
resetSchedule()
scheduleWeek(PM, "PM")
View(A)
View(PM)
View(A)
scheduleWeek(AM, "AM")
View(AM)
Employees$paste0("Mon", "AM", "off")
Off <- paste0(shift, AM_PM, "Off")
Off <- paste0("Mon", "AM", "Off")
Employees$Off
Employees[,Off]
Employees[which(Employees[,Off] == FALSE),]
source('~/Desktop/JJs Scheduler/generateSchedule.R')
source('~/Desktop/JJs Scheduler/generateSchedule.R')
resetSchedule()
scheduleWeek(AM, "AM")
source('~/Desktop/JJs Scheduler/generateSchedule.R')
scheduleWeek(AM, "AM")
View(Employees)
View(A)
View(AM)
View(E)
View(Employees)
resetSchedule()
scheduleWeek(AM, "AM")
debug(scheduleShift())
debug(scheduleShift
)
scheduleWeek(AM, "AM")
View(E)
source('~/Desktop/JJs Scheduler/generateSchedule.R')
source('~/Desktop/JJs Scheduler/generateSchedule.R')
resetSchedule()
scheduleWeek(AM, "AM")
source('~/Desktop/JJs Scheduler/generateSchedule.R')
scheduleWeek(AM, "AM")
source('~/Desktop/JJs Scheduler/generateSchedule.R')
scheduleWeek(AM, "AM")
source('~/Desktop/JJs Scheduler/generateSchedule.R')
resetSchedule()
scheduleWeek(AM, "AM")
source('~/Desktop/JJs Scheduler/generateSchedule.R')
scheduleWeek(AM, "AM")
Employees[which(Employees[,Off] == FALSE),]
Employees[which(Employees[Off] == FALSE),]
Employees[which(Employees[,Off] == FALSE),]
Employees[which(Employees[,"\Off"] == FALSE),]
Employees[which(Employees[,"\(Off)"] == FALSE),]
Employees[which(Employees[,"ThuAMOff"] == FALSE),]
Employees[which(Employees$ThursAMOff == FALSE),]
Employees[which(Employees[ThursAMOff] == FALSE),]
Employees[which(Employees["ThursAMOff"] == FALSE),]
Employees[which(Employees[paste0("Thu", "AM", "Off")] == FALSE),]
Employees[which(Employees[Off] == FALSE),]
Employees[which(Employees[as.character(Off)] == FALSE),]
resetSchedule()
Employees[which(Employees[Off] == FALSE),]
source('~/Desktop/JJs Scheduler/generateSchedule.R')
resetSchedule()
scheduleWeek(AM, "AM")
View(E)
View(Employees)
View(AM)
source('~/Desktop/JJs Scheduler/generateSchedule.R')
resetSchedule()
scheduleWeek(AM, "AM")
View(AM)
View(A)
resetSchedule()
View(AM)
View(Employees)
scheduleWeek(AM, "AM")
View(Employees)
View(AM)
debug(scheduleShift)
debug(assignShift)
resetSchedule()
scheduleWeek(AM, "AM")
View(E)
View(worker)
View(E)
source('~/Desktop/JJs Scheduler/generateSchedule.R')
rm(list = ls())
resetSchedule()
source('~/Desktop/JJs Scheduler/generateSchedule.R')
resetSchedule()
scheduleWeek(AM, "AM")
source('~/Desktop/JJs Scheduler/generateSchedule.R')
scheduleWeek(AM, "AM")
resetSchedule()
scheduleWeek(AM, "AM")
source('~/Desktop/JJs Scheduler/generateSchedule.R')
source('~/Desktop/JJs Scheduler/generateSchedule.R')
resetSchedule()
scheduleWeek(AM, "AM")
View(AM)
View(availableE)
View(AM)
View(PM)
View(AM)
source('~/Desktop/JJs Scheduler/generateSchedule.R')
source('~/Desktop/JJs Scheduler/generateSchedule.R')
resetSchedule()
debug(scheduleShift)
debug(assignShift)
scheduleWeek(AM, "AM")
source('~/Desktop/JJs Scheduler/generateSchedule.R')
q
source('~/Desktop/JJs Scheduler/generateSchedule.R')
resetSchedule()
scheduleWeek(AM, "AM")
View(AM)
source('~/Desktop/JJs Scheduler/generateSchedule.R')
source('~/Desktop/JJs Scheduler/generateSchedule.R')
resetSchedule()
scheduleWeek(AM, "AM")
source('~/Desktop/JJs Scheduler/generateSchedule.R')
View(AM)
View(availableE)
View(Employees)
View(worker)
resetSchedule()
scheduleWeek(AM, "AM")
View(AM)
scheduleWeek(PM, "PM")
View(PM)
source('~/Desktop/JJs Scheduler/generateSchedule.R')
resetSchedule()
scheduleWeek(PM, "PM")
scheduleWeek(AM, "AM")
View(PM)
source('~/Desktop/JJs Scheduler/generateSchedule.R')
resetSchedule()
scheduleWeek(PM, "PM")
scheduleWeek(AM, "AM")
View(PM)
View(AM)
source('~/Desktop/JJs Scheduler/generateSchedule.R')
resetSchedule()
scheduleWeek(PM, "PM")
which((A$TargetHoursNight + A$TargetHoursDay) < A$TotalHours)
which((A$TargetHoursNight + A$TargetHoursDay) <= A$TotalHours)
(A$TargetHoursNight + A$TargetHoursDay) <= A$TotalHours
resetSchedule()
source('~/Desktop/JJs Scheduler/generateSchedule.R')
resetSchedule()
scheduleWeek(AM, "AM")
View(AM)
scheduleWeek(PM, "PM")
View(PM)
View(Employees)
View(availableE)
View(availableE)
View(PM)
resetSchedule()
View(AM)
scheduleWeek(AM, "AM")
scheduleWeek(PM, "PM")
View(AM)
resetSchedule()
View(Employees)
scheduleWeek(AM, "AM")
scheduleWeek(PM, "PM")
View(Employees)
source('~/Desktop/JJs Scheduler/generateSchedule.R')
View(availableE)
resetSchedule()
scheduleWeek(PM, "PM")
scheduleWeek(AM, "AM")
View(Employees)
View(AM)
resetSchedule()
scheduleWeek(PM, "PM")
scheduleWeek(AM, "AM")
View(Employees)
View(AM)
source('~/Desktop/JJs Scheduler/generateSchedule.R')
resetSchedule()
scheduleWeek(PM, "PM")
scheduleWeek(AM, "AM")
View(Employees)
View(AM)
source('~/Desktop/JJs Scheduler/generateSchedule.R')
source('~/Desktop/JJs Scheduler/generateSchedule.R')
resetSchedule()
scheduleWeek(PM, "PM")
scheduleWeek(AM, "AM")
View(AM)
View(Employees)
View(PM)
source('~/Desktop/JJs Scheduler/generateSchedule.R')
resetSchedule()
resetSchedule()
source('~/Desktop/JJs Scheduler/generateSchedule.R')
resetSchedule()
View(Employees)
scheduleWeek(PM, "PM")
source('~/Desktop/JJs Scheduler/generateSchedule.R')
resetSchedule()
resetSchedule()
source('~/Desktop/JJs Scheduler/generateSchedule.R')
resetSchedule()
View(Employees)
scheduleWeek(PM, "PM")
scheduleWeek(AM, "AM")
View(AM)
source('~/Desktop/JJs Scheduler/generateSchedule.R')
resetSchedule()
scheduleWeek(AM, "AM")
scheduleWeek(PM, "PM")
source('~/Desktop/JJs Scheduler/generateSchedule.R')
scheduleWeek(PM, "PM")
View(AM)
schedule <- data.frame(c(Employees$Name, Employees["WedAM":"TuesPM"]))
schedule <- data.frame(c(Employees$Name,"WedAM", "WedPM", "ThuAM", "ThuPM", "FriAM", "FriPM", "SatAM", "SatPM", "SunAM", "SunPM", "MonAM", "MonPM", "TuesAM", "TuesPM"))
View(schedule)
schedule <- data.frame(Employees$Name,"WedAM", "WedPM", "ThuAM", "ThuPM", "FriAM", "FriPM", "SatAM", "SatPM", "SunAM", "SunPM", "MonAM", "MonPM", "TuesAM", "TuesPM")
View(schedule)
schedule <<- data.frame(Employees$Name, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA)
colnames(schedule) <<- c(Name,"WedAM", "WedPM", "ThuAM", "ThuPM", "FriAM", "FriPM", "SatAM", "SatPM", "SunAM", "SunPM", "MonAM", "MonPM", "TuesAM", "TuesPM")
schedule <<- data.frame(Employees$Name, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA)
colnames(schedule) <<- c("Name","WedAM", "WedPM", "ThuAM", "ThuPM", "FriAM", "FriPM", "SatAM", "SatPM", "SunAM", "SunPM", "MonAM", "MonPM", "TuesAM", "TuesPM")
schedule <<- data.frame(Employees$Name, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA)
colnames(schedule) <<- c("Name","WedAM", "WedPM", "ThuAM", "ThuPM", "FriAM", "FriPM", "SatAM", "SatPM", "SunAM", "SunPM", "MonAM", "MonPM", "TuesAM", "TuesPM")
View(schedule)
colnames(schedule) <<- c("Name","WedAM", "WedPM", "ThuAM", "ThuPM", "FriAM", "FriPM", "SatAM", "SatPM", "SunAM", "SunPM", "MonAM", "MonPM", "TuesAM", "TuesPM")
colnames("schedule") <<- c("Name","WedAM", "WedPM", "ThuAM", "ThuPM", "FriAM", "FriPM", "SatAM", "SatPM", "SunAM", "SunPM", "MonAM", "MonPM", "TuesAM", "TuesPM")
colnames(schedule) <- c("Name","WedAM", "WedPM", "ThuAM", "ThuPM", "FriAM", "FriPM", "SatAM", "SatPM", "SunAM", "SunPM", "MonAM", "MonPM", "TuesAM", "TuesPM")
View(schedule)
for (i in colnames(AM)[4:10]) {
for (j in AM$Shift) {
schedule[which(schedule$Name == AM[which(AM$Shift == j)]), paste0(i, "AM")] <<- AM[which(AM$Shift == j), i]
}
}
for (i in colnames(AM)[4:10]) {
for (j in AM$Shift) {
schedule[which(schedule$Name == AM[which(AM$Shift == j)]), paste0(i, "AM")] <- AM[which(AM$Shift == j), i]
}
}
AM$Shift
AM[which(AM$Shift == "10-5(D)")
]
AM[which(AM$Shift == "10-5(D)"),]
for (i in colnames(AM)[4:10]) {
for (j in AM$Shift) {
schedule[which(schedule$Name == AM[which(AM$Shift == j),]), paste0(i, "AM")] <<- AM[which(AM$Shift == j), i]
}
}
for (i in colnames(AM)[4:10]) {
for (j in AM$Shift) {
schedule[which(schedule$Name == AM[which(AM$Shift == j),]), paste0(i, "AM")] <- AM[which(AM$Shift == j), i]
}
}
colnames(AM)[4:10]
AM$Shift
for (i in colnames(AM)[4:10]) {
for (j in AM$Shift) {
schedule[which(schedule$Name == subset(AM, Shift == j)), paste0(i, "AM")] <- AM[which(AM$Shift == j), i]
}
}
class(schedule$Name)
class(schedule$Name) <- character()
for (i in colnames(AM)[4:10]) {
for (j in AM$Shift) {
schedule[which(schedule$Name == subset(AM, Shift == j)), paste0(i, "AM")] <- AM[which(AM$Shift == j), i]
}
}
View(schedule)
schedule[which(schedule$Name == subset(AM, Shift == "10-5(D)")), paste0("Mon", "AM")]
s <- paste0("Mon", "AM")
schedule[which(schedule$Name == subset(AM, Shift == "10-5(D)")), s]
schedule[which(schedule$Name == subset(AM, Name == AM[which(AM$Shift == "10-5(D)")]), s]
schedule[which(schedule$Name == subset(AM, Name == AM[which(AM$Shift == "10-5(D)"),]), s]
schedule[which(schedule$Name == subset(AM, Name == AM[which(AM$Shift == "10-5(D)"),])), s]
schedule[which(schedule$Name == subset(AM, "Name" == AM[which(AM$Shift == "10-5(D)"),])), s]
schedule[which(schedule$Name == subset(AM, "Name" == subset(AM, "Shift" == "10-5(D)"))), s]
AM[which(AM$Shift == j), i]
for (i in colnames(AM)[4:10]) {
for (j in AM$Shift) {
name <- AM[which(AM$Shift == j), i]
day <- paste0(i, "AM")
shift <- j
schedule[which(schedule$Name == name), day] = shift
}
}
View(schedule)
for (i in colnames(AM)[4:10]) {
for (j in AM$Shift) {
name <- AM[which(AM$Shift == j), i]
day <- paste0(i, "AM")
shift <- j
schedule[which(schedule$Name == name), day] <- shift
}
}
View(schedule)
schedule[which(schedule$Name == name), day]
View(schedule)
schedule <<- data.frame(as.character(Employees$Name), NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA)
colnames(schedule) <<- c("Name","WedAM", "WedPM", "ThuAM", "ThuPM", "FriAM", "FriPM", "SatAM", "SatPM", "SunAM", "SunPM", "MonAM", "MonPM", "TuesAM", "TuesPM")
schedule <- data.frame(as.character(Employees$Name), NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA)
colnames(schedule) <- c("Name","WedAM", "WedPM", "ThuAM", "ThuPM", "FriAM", "FriPM", "SatAM", "SatPM", "SunAM", "SunPM", "MonAM", "MonPM", "TuesAM", "TuesPM")
View(schedule)
for (i in colnames(AM)[4:10]) {
for (j in AM$Shift) {
name <- AM[which(AM$Shift == j), i]
day <- paste0(i, "AM")
shift <- j
schedule[which(schedule$Name == name), day] <- shift
}
}
View(schedule)
for (i in colnames(PM)[4:10]) {
for (j in PM$Shift) {
name <- PM[which(PM$Shift == j), i]
day <- paste0(i, "PM")
shift <- j
schedule[which(schedule$Name == name), day] <- shift
}
}
View(schedule)
source('~/Desktop/JJs Scheduler/generateSchedule.R')
generateSchedule()
source('~/Desktop/JJs Scheduler/generateSchedule.R')
generateSchedule()
View(schedule)
generateSchedule()
source('~/Desktop/JJs Scheduler/generateSchedule.R')
generateSchedule()
View(schedule)
source('~/Desktop/JJs Scheduler/generateSchedule.R')
rm(list = ls())
source('~/Desktop/JJs Scheduler/generateSchedule.R')
generateSchedule()
source('~/Desktop/JJs Scheduler/generateSchedule.R')
generateSchedule()
source('~/Desktop/JJs Scheduler/generateSchedule.R')
generateSchedule()
View(PM)
generateSchedule()
source('~/Desktop/JJs Scheduler/generateSchedule.R')
generateSchedule()
View(A)
generateSchedule()
source('~/Desktop/JJs Scheduler/generateSchedule.R')
resetSchedule()
View(Employees)
generateSchedule()
rm(list=ls())
generateSchedule()
source('~/Desktop/JJs Scheduler/generateSchedule.R')
generateSchedule()
source('~/Desktop/JJs Scheduler/generateSchedule.R')
generateSchedule()
generateSchedule()
source('~/Desktop/JJs Scheduler/generateSchedule.R')
generateSchedule()
View(availableE)
generateSchedule()
View(AM)
source('~/Desktop/JJs Scheduler/generateSchedule.R')
generateSchedule()
View(availableE)
source('~/Desktop/JJs Scheduler/generateSchedule.R')
generateSchedule()
source('~/Desktop/JJs Scheduler/generateSchedule.R')
subset(Employees, MaxHours >= 30)
subset(Employees, "MaxHours" >= 30)
subset(Employees, Employees$MaxHours >= 30)
source('~/Desktop/JJs Scheduler/generateSchedule.R')
generateSchedule()
A <<- subset(availableE, availableE$MaxHours >= (availableE$TotalHours + as.integer(AM[which(AM$Shift == start_end), "Hours"])))
A <<- subset(availableE, availableE$MaxHours >= (availableE$TotalHours + as.integer(AM[which(AM$Shift == "11-5"), "Hours"])))
View(A)
A <<- subset(Employees, Employees$MaxHours >= (Employees$TotalHours + as.integer(AM[which(AM$Shift == "11-5"), "Hours"])))
View(A)
source('~/Desktop/JJs Scheduler/generateSchedule.R')
generateSchedule()
rm(list=ls())
source('~/Desktop/JJs Scheduler/generateSchedule.R')
generateSchedule()
source('~/Desktop/JJs Scheduler/generateSchedule.R')
generateSchedule()
View(AM)
View(A)
source('~/Desktop/JJs Scheduler/generateSchedule.R')
generateSchedule()
source('~/Desktop/JJs Scheduler/generateSchedule.R')
generateSchedule()
View(A2)
View(A)
View(A2)
View(A)
View(schedule)
View(HoursTable)
source('~/Desktop/JJs Scheduler/generateSchedule.R')
generateSchedule()
View(HoursTable)
View(schedule)
View(A2)
source('~/Desktop/JJs Scheduler/generateSchedule.R')
generateSchedule()
View(HoursTable)
source('~/Desktop/JJs Scheduler/generateSchedule.R')
generateSchedule()
View(HoursTable)
source('~/Desktop/JJs Scheduler/generateSchedule.R')
generateSchedule()
source('~/Desktop/JJs Scheduler/generateSchedule.R')
generateSchedule()
generateSchedule()
source('~/Desktop/JJs Scheduler/generateSchedule.R')
generateSchedule()
View(HoursTable)
source('~/Desktop/JJs Scheduler/generateSchedule.R')
generateSchedule()
View(HoursTable)
View(schedule)
View(Employees)
View(E)
generateSchedule()
source('~/Desktop/JJs Scheduler/generateSchedule.R')
generateSchedule()
generateSchedule()
source('~/Desktop/JJs Scheduler/generateSchedule.R')
generateSchedule()
View(HoursTable)
View(A2)
View(A)
source('~/Desktop/JJs Scheduler/generateSchedule.R')
generateSchedule()
View(HoursTable)
source('~/Desktop/JJs Scheduler/generateSchedule.R')
generateSchedule()
View(HoursTable)
generateSchedule()
View(HoursTable)
View(schedule)
View(schedule)
View(HoursTable)
View(schedule)
generateSchedule()
View(schedule)
generateSchedule()
source('~/Desktop/JJs Scheduler/generateSchedule.R')
generateSchedule()
View(schedule)
generateSchedule()
View(schedule)
source('~/Desktop/JJs Scheduler/generateSchedule.R')
generateSchedule()
generateSchedule()
View(schedule)
row.names(installed.packages())
any(row.names(installed.packages()) == "xlsx")
any(row.names(installed.packages()) == "xlx")
install.packages("xlsx")
source('~/Desktop/JJs Scheduler/generateSchedule.R')
setwd('~/Desktop/Scheduler')
